/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package dao;

import entities.Role;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collection;

/**
 *
 * @author Elisa Bothy
 */
public class RoleDAO {
    Connection connection;

    public RoleDAO() throws SQLException {
        connection = MariadbConnection.getInstance();
    }
    
    public Role read(Integer id){
        Role obj = null;
        String sql = "SELECT * FROM role WHERE id_role=?";
        PreparedStatement pstmt;
        try {
            pstmt = connection.prepareStatement(sql); 
            pstmt.setInt(1, id);//le premier ? prend la valeur id 
            // que j'ai mis en param√®tre
            ResultSet rs = pstmt.executeQuery();
            if (rs.first()){
                obj = new Role();
                obj.setId_role(rs.getInt("id_role"));
                obj.setDesc(rs.getString("description"));
            }
        } catch (SQLException ex) {
            System.out.println("Erreur lors de la lecture :" + ex.getMessage());
        }
       return obj;
    }
    
    public void create(Role obj){
        String sql = "INSERT INTO role (description) " + "VALUES (?)";
        try {
            PreparedStatement pstmt = connection
                    .prepareStatement(
                            sql,
                            PreparedStatement.RETURN_GENERATED_KEYS
                    );
            pstmt.setString(1, obj.getDesc());
            int nbLines = pstmt.executeUpdate();
            if(nbLines == 1){
                ResultSet autoGeneratedKeys = pstmt.getGeneratedKeys();
                autoGeneratedKeys.first();
                int id = autoGeneratedKeys.getInt(1);
                obj.setId_role(id);
            }
        } catch (SQLException ex) {
            System.out.println("Erreur lors de l'insertion :" + ex.getMessage());
        }
    }
    
    public void update (Role obj){
        String sql ="UPDATE role SET description=? " + "WHERE id_role=?";
        
        PreparedStatement pstmt;
        try {
            pstmt = connection.prepareStatement(sql);
            pstmt.setString(1, obj.getDesc());
            pstmt.setInt(2, obj.getId_role());
            pstmt.executeUpdate();
        } catch (SQLException ex) {
            System.out.println("Erreur lors de l'update :" + ex.getMessage());
        }
        
    }
    
    public void delete(Integer id){
        String sql = "DELETE FROM role WHERE id_role=?";
        try {
            PreparedStatement pstmt = connection.prepareStatement(sql);
            pstmt.setInt(1, id);
            pstmt.executeUpdate();
        } catch (SQLException ex) {
            System.out.println("Erreur lors du delete :" + ex.getMessage());
        }
    }
    
    public int count(){
        int count = 0;
        String sql = "SELECT COUNT(*) AS c FROM role";
        try {
            PreparedStatement pstmt = connection.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            if(rs.first()){
                count = rs.getInt("c");
            }
        } catch (SQLException ex) {
            System.out.println("Erreur lors du comptage :" + ex.getMessage());
        }
        return count;
    }
    
    public Collection<Role> list(){
        ArrayList<Role> list = new ArrayList<>();
        String sql = "SELECT * FROM role";
        try {
            PreparedStatement pstmt = connection.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            while(rs.next()){
                Role r = new Role();
                r.setId_role(rs.getInt("id_role"));
                r.setDesc(rs.getString("description"));
                list.add(r);
            }
        } catch (SQLException ex) {
            System.out.println("Erreur lors du listage :" + ex.getMessage());
        }
        return list;
    }
}
